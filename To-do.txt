To-do List

- Make changing of the console state flags easier
- Make the interrupt handling system more coherent and 
	organized. (Shouldn't be in kernel.c right?)
- Implement a file system
	- Probably should start a disk and device abstraction layer
- Implement a shell
	- Allow user to move cursor and enter text in the middle of his input
- Make scrolling more efficient by not clearing the entire
	screen but only that which must be cleared.
- Finish implementing useful keyboard keys
- Didn't add check in prompt for handling a tab when the screen is almost full.
	Must do that at some point.
- Also must fix console behavior when the user types a tab near the end
	of the screen forcing the command to continue on the next line below.
- Implement actual disk geometry checking in the bootloader so that we
	can load an OS taking up more than 62 sectors.


- Create an OS
	- Use C
		- Enter protected mode
			- Create GDT Table
			- Set PE flag in CR0 register
		- Have a good stack setup
	- Create a stable console
		- Have keyboard input
			- Enable interrupts
				- Setup the IRQ table
			- Have a working handler
		- Control VGA Text mode well
	- Have a filesytem
		- Working disk driver
			- TBA
		- TBA